class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int n=obstacleGrid.length;
        int m=obstacleGrid[0].length;
        int dp[][]=new int [n][m];
        if(obstacleGrid[0][0]==1)return 0;
        for(int j=0;j<m;j++){//first row
            if(obstacleGrid[0][j]==0){//1 is obstacle and 0 is space
                dp[0][j]=1;
            }else{
                break;
            }
        }
        for(int i=0;i<n;i++){//first col
            if(obstacleGrid[i][0]==0){
                dp[i][0]=1;
            }else{
                break;
            }
        }
        for(int i=1;i<n;i++){//other rows and cols
            for(int j=1;j<m;j++){
                if(obstacleGrid[i][j]==1){
                    dp[i][j]=0;
                }else{
                    dp[i][j]=dp[i-1][j]+dp[i][j-1];
                }

            }
        }
        return dp[n-1][m-1];
    }
}
