/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;

    public Node() {}
    
    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, Node _left, Node _right, Node _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/

class Solution {
    public Node connect(Node root) {
        if(root==null) return root;
        if(root.left!=null && root.right!=null) root.left.next = root.right;
        if(root.left!=null && root.right==null && root.next!=null){
            root.left.next = helper(root.next);    
        }  
        if(root.right!=null && root.next!=null) root.right.next = helper(root.next);      
        connect(root.right);
        connect(root.left);
        return root;
    }

    public Node helper(Node root){
        if(root==null) return root;
        if(root.left!=null) return root.left;
        if(root.right!=null) return root.right;
        return helper(root.next);
    }
}
