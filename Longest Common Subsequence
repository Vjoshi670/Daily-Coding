class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int[][] dp = new int[text1.length()][text2.length()];
        for(int i = 0; i < dp.length; i++){ //filling the first row of DP. 
            if(text1.charAt(i) == text2.charAt(0))dp[i][0] = 1;
            else{
                if(i != 0){
                    dp[i][0] = dp[i-1][0];
                }
            }
        }
        for(int i = 0; i < dp[0].length; i++){  //filling the first col of DP.
            if(text1.charAt(0) == text2.charAt(i))dp[0][i] = 1;
            else{
                if(i != 0){
                    dp[0][i] = dp[0][i-1];
                }
            }
        }
        for(int i = 1; i < dp.length; i++){
            for(int j = 1; j < dp[0].length; j++){
                if(text1.charAt(i) == text2.charAt(j)){
                    dp[i][j] = 1 + dp[i-1][j-1];
                }else{
                    dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);
                }
            }
        }
        return dp[dp.length-1][dp[0].length-1];
    }
}
