/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode constructFromPrePost(int[] preorder, int[] postorder) {
    return helper(preorder, 0, preorder.length-1, postorder, 0, postorder.length);
    }

    private TreeNode helper(int[] preorder, int preStart, int preEnd, int[] postorder, int postStart, int postEnd){

        if(preStart>preEnd ) return null;
       
        TreeNode root= new TreeNode(preorder[preStart]);

        if(preStart==preEnd) return root;

        int index=postStart;
        while(postorder[index]!=preorder[preStart+1]) index++;

        int len=index-postStart+1;

        root.left = helper(preorder, preStart+1, preStart+len, postorder, postStart, index);
        root.right = helper(preorder,  preStart+len+1, preEnd, postorder, index+1, postEnd-1);

        return root;
    }
}
