/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class CBTInserter {

   Queue<TreeNode> q = new LinkedList<>();
TreeNode ptr = new TreeNode();
TreeNode root;
public CBTInserter(TreeNode root) {
    this.root = root;
    
    Queue<TreeNode> que = new LinkedList<>();
    
    que.offer(root);
    
    while(!que.isEmpty()){
        TreeNode temp = que.poll();
        
        if(temp != null){
            if(temp.left == null || temp.right == null)
                q.offer(temp);
            
            if(temp.left != null)
                que.offer(temp.left);
            
            if(temp.right != null)
                que.offer(temp.right);
        }
    }
    
    ptr = q.peek();
}

public int insert(int val) {
    int ans = ptr.val;
    
    if(ptr.left == null){
        TreeNode newNode = new TreeNode(val);
        
        ptr.left = newNode;
        
        q.offer(newNode);
    }
    else{
        TreeNode newNode = new TreeNode(val);
        
        ptr.right = newNode;
        
        q.poll();
        
        q.offer(newNode);
        
        ptr = q.peek();
    }
    return ans;
}

public TreeNode get_root() {
    return root;
}
}
