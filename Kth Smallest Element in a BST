/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        ArrayList<Integer> list1=new ArrayList<Integer>();
        list1= inorderTraversal(root);
        int ans=list1.get(k-1);
       return ans;
        
    }
    
    public ArrayList<Integer> inorderTraversal(TreeNode A) {
        ArrayList<Integer> list=new ArrayList<>();
        if(A==null){
            return list;
        }
        list.addAll(inorderTraversal(A.left));
        list.add(A.val);
        list.addAll(inorderTraversal(A.right));
        return list;
    }
}
