/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
   Map<Integer, Integer> hm = new HashMap<>();
    public boolean isCousins(TreeNode root, int x, int y) {
  
        
        return helper(root, x, y, 1) && (hm.get(x) == hm.get(y));

    }

    private boolean helper(TreeNode root, int x, int y, int depth){
        
        if(root == null) return true;
        hm.put(root.val, depth);
        if((root.left != null && root.right != null) && ((root.left.val == x && root.right.val == y)  || (root.left.val == y && root.right.val == x))) return false;
        
       
        return helper(root.left, x, y, depth + 1) && helper(root.right, x, y, depth + 1); 
        
    }
}
