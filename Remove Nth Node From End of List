/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head == null || head.next == null){return null;}

        int size = 0, count;

        ListNode temp = head;

        while(temp != null){
            temp = temp.next;
            size++;
        }

        ListNode t = head;

        if(n>size || n == size){
            head = head.next;
            return head;
        }
        else{
            count = size-n;
            for(int i= 1; i<count; i++){
                head = head.next;
            }
            head.next = head.next.next;
        }
        return t;
    }
}
