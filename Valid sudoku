class Solution {
    public boolean isValidSudoku(char[][] board) {
        for(int i=0;i<9;i++){
            HashSet<Character> hs1=new HashSet<>();
            for(int j=0;j<9;j++){
                if(board[i][j] != '.'){
                    if(hs1.contains(board[i][j])){ return false;}
                    else{hs1.add(board[i][j]);}
                }
            }
        }
        //check column wise
        for(int i=0;i<9;i++){
            HashSet<Character> hs2=new HashSet<>();
            for(int j=0;j<9;j++){
                if(board[j][i] !='.'){
                    if(hs2.contains(board[j][i])){ return false;}
                    else{hs2.add(board[j][i]);}
                }
            }
        }
        //check 3*3
       for(int row=0;row<9;row+=3){
           for(int col=0;col<9;col+=3){
               HashSet<Character> hs3=new HashSet<>();
               for(int i=row;i<row+3;i++){
                   for(int j=col;j<col+3;j++){
                        if(board[i][j] != '.'){
                           if(hs3.contains(board[i][j])){ return false;}
                           else{hs3.add(board[i][j]);}
                        }
                    }
                }
            }
        }
       return true;
    }
}
Console
