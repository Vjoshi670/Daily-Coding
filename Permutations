class Solution {
    List<List<Integer>> res;

    public List<List<Integer>> permute(int[] nums) {
        res = new ArrayList<>();

        backtrack(new LinkedHashSet<>(), nums);
        return res;
    }

    private void backtrack(LinkedHashSet<Integer> permutation, int[] nums) {
        if (permutation.size() == nums.length) {
            res.add(new ArrayList<>(permutation));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (permutation.contains(nums[i])) continue;

            permutation.add(nums[i]);
            backtrack(permutation, nums);
            permutation.remove(nums[i]);
        }   
    }
}
