/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
         ListNode C=null;;
        ListNode temp = null;

        if(list1 == null) { return list2; }
        if(list2 == null) { return list1; }
        // Setting head to start
        if(list1.val < list2.val){
            C = list1;
            temp = list1;
            list1 = list1.next;
        }
        else{
            C = list2;
            temp = list2;
            list2 = list2.next;
        }
        // Traversing through list
        while(list1 != null && list2 != null){
            if(list1.val < list2.val){
                temp.next = list1;
                list1 =list1.next;
                temp = temp.next;
            }
            else {
                temp.next = list2;
                list2 = list2.next;
                temp= temp.next;
            }
        }
//Merging rest of the link after shorter List exhausts
        if(list1 == null){temp.next = list2; }
        if (list2 == null) {temp.next = list1;}

        return C;
    }
}
